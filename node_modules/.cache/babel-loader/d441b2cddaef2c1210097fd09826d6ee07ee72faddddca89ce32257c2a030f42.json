{"ast":null,"code":"var _jsxFileName = \"/Users/kirillkolesnikov/Documents/GitHub/test-timer/src/components/Timer/Timer.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState, useRef } from 'react';\nimport { formatTime } from '../../utils/formatTime.js';\nimport './Timer.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Timer() {\n  _s();\n  const [time, setTime] = useState(0);\n  const [start, setStart] = useState(false);\n  const timerId = useRef();\n  const inputRef = useRef(null);\n  useEffect(() => {\n    if (start) {\n      timerId.current = setInterval(() => {\n        setTime(prev => prev - 1);\n      }, 1000);\n    }\n    if (time <= 0) {\n      clearInterval(timerId.current);\n    }\n    return () => clearInterval(timerId.current);\n  }, [start, time]);\n  function inputChange(e) {\n    setTime(e.target.value);\n    setStart(false);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"input\",\n      placeholder: \"Seconds\",\n      type: \"text\",\n      onChange: inputChange,\n      ref: inputRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"btn\",\n      onClick: () => {\n        setStart(true);\n        inputRef.current.value = '';\n      },\n      children: \"Start\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"timer\",\n      children: start ? formatTime(time) : 'hh:mm:ss'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n}\n_s(Timer, \"NTgY+QGRwHLIwM45yIGfAC72Gxs=\");\n_c = Timer;\nvar _c;\n$RefreshReg$(_c, \"Timer\");","map":{"version":3,"names":["useEffect","useState","useRef","formatTime","jsxDEV","_jsxDEV","Timer","_s","time","setTime","start","setStart","timerId","inputRef","current","setInterval","prev","clearInterval","inputChange","e","target","value","children","className","placeholder","type","onChange","ref","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/kirillkolesnikov/Documents/GitHub/test-timer/src/components/Timer/Timer.jsx"],"sourcesContent":["import { useEffect, useState, useRef } from 'react';\nimport { formatTime } from '../../utils/formatTime.js';\nimport './Timer.scss';\n\nexport function Timer () {\n    const [time, setTime] = useState(0);\n    const [start, setStart] = useState(false);\n    const timerId = useRef();\n    const inputRef = useRef(null);\n\n    \n\n    useEffect(() => {\n        if(start) {\n            timerId.current = setInterval(() => {\n                setTime(prev => prev - 1)\n            }, 1000)\n        }\n\n        if (time <= 0) {\n            clearInterval(timerId.current)\n        }\n\n        return () => clearInterval(timerId.current)\n    }, [start, time])\n\n\n    function inputChange(e) {\n        setTime(e.target.value)\n        setStart(false);\n    }\n\n    return (\n        <div>\n            <input className='input' placeholder='Seconds' type='text' onChange={inputChange} ref={inputRef}/>\n            <button type='submit' className='btn' onClick={() => {\n                setStart(true);\n                inputRef.current.value = '';\n            }}>\n                Start\n            </button>\n            <br/>\n            <br/>\n            <label className='timer'>\n                {(start) ? formatTime(time) : 'hh:mm:ss'}\n            </label>\n        </div>\n    )\n}"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AACnD,SAASC,UAAU,QAAQ,2BAA2B;AACtD,OAAO,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtB,OAAO,SAASC,KAAKA,CAAA,EAAI;EAAAC,EAAA;EACrB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC;EACnC,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EACzC,MAAMW,OAAO,GAAGV,MAAM,CAAC,CAAC;EACxB,MAAMW,QAAQ,GAAGX,MAAM,CAAC,IAAI,CAAC;EAI7BF,SAAS,CAAC,MAAM;IACZ,IAAGU,KAAK,EAAE;MACNE,OAAO,CAACE,OAAO,GAAGC,WAAW,CAAC,MAAM;QAChCN,OAAO,CAACO,IAAI,IAAIA,IAAI,GAAG,CAAC,CAAC;MAC7B,CAAC,EAAE,IAAI,CAAC;IACZ;IAEA,IAAIR,IAAI,IAAI,CAAC,EAAE;MACXS,aAAa,CAACL,OAAO,CAACE,OAAO,CAAC;IAClC;IAEA,OAAO,MAAMG,aAAa,CAACL,OAAO,CAACE,OAAO,CAAC;EAC/C,CAAC,EAAE,CAACJ,KAAK,EAAEF,IAAI,CAAC,CAAC;EAGjB,SAASU,WAAWA,CAACC,CAAC,EAAE;IACpBV,OAAO,CAACU,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;IACvBV,QAAQ,CAAC,KAAK,CAAC;EACnB;EAEA,oBACIN,OAAA;IAAAiB,QAAA,gBACIjB,OAAA;MAAOkB,SAAS,EAAC,OAAO;MAACC,WAAW,EAAC,SAAS;MAACC,IAAI,EAAC,MAAM;MAACC,QAAQ,EAAER,WAAY;MAACS,GAAG,EAAEd;IAAS;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eAClG1B,OAAA;MAAQoB,IAAI,EAAC,QAAQ;MAACF,SAAS,EAAC,KAAK;MAACS,OAAO,EAAEA,CAAA,KAAM;QACjDrB,QAAQ,CAAC,IAAI,CAAC;QACdE,QAAQ,CAACC,OAAO,CAACO,KAAK,GAAG,EAAE;MAC/B,CAAE;MAAAC,QAAA,EAAC;IAEH;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACT1B,OAAA;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACL1B,OAAA;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACL1B,OAAA;MAAOkB,SAAS,EAAC,OAAO;MAAAD,QAAA,EAClBZ,KAAK,GAAIP,UAAU,CAACK,IAAI,CAAC,GAAG;IAAU;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAEd;AAACxB,EAAA,CA5CeD,KAAK;AAAA2B,EAAA,GAAL3B,KAAK;AAAA,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}